server:
  port: 8083

spring:
  application:
    name: user

  datasource:
    url: jdbc:mysql://localhost:3306/user_db?serverTimezone=UTC
    username: root
    password: root

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  # --- CONFIGURACIÓN DE KAFKA ALINEADA CON EL ESTÁNDAR ---
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        # Ahora confiamos en los headers, como en bets-service.
        # Eliminamos 'use.type.headers: false' y 'value.default.type'.
        spring.json.trusted.packages: "com.bjpractice.events"

    # Aunque 'user' no produzca mensajes ahora, definimos la configuración
    # para mantener la coherencia y estar preparados para el futuro.
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true # El estándar del proyecto

# --- Topics de la aplicación ---
app:
  kafka:
    topics:
      bet-settled: "bets.bet-settled"
services:
  # --- Base de Datos Unificada ---
  mysql-db:
    image: mysql:8.0
    container_name: mysql-bjmicros
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=game_core_db
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Broker de Kafka para Desarrollo ---
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-bjmicros
    ports:
      - "9092:9092"
    environment:
      CLUSTER_ID: '0HyBJRfGTmeiNhglXrZE5Q'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      # --- Fix para entorno de un solo nodo ---
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  # --- Nuestros Microservicios ---
  game-core-app:
    container_name: game-core-app
    build:
      context: ./game-core/game-core
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/game_core_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_ADMIN_PROPERTIES_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.springframework.kafka.support.serializer.JsonSerializer
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  bets-service-app:
    container_name: bets-service-app
    build:
      context: ./bets/bets
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/bets_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_ADMIN_PROPERTIES_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update # <-- Añadido por consistencia
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  user-service-app:
    container_name: user-service-app
    build:
      context: ./user/user
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/user_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_ADMIN_PROPERTIES_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update # <-- Añadido por consistencia
      # --- Fix para forzar el Deserializador JSON ---
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.springframework.kafka.support.serializer.JsonDeserializer
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES=com.bjpractice.events
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_USE_TYPE_HEADERS=false
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_VALUE_DEFAULT_TYPE=com.bjpractice.events.BetSettledEvent
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  auth-service-app:
    container_name: auth-service-app
    build:
      context: ./auth/auth
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/auth_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update # <-- Añadido por consistencia
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  # --- API Gateway ---
  apisix:
    image: apache/apisix:3.9.1-debian
    container_name: apisix-bjmicros
    volumes:
      - ./apisix_config/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./apisix_config/apisix.yaml:/usr/local/apisix/conf/apisix.yaml
    ports:
      - "9180:9180"
      - "9080:9080"

volumes:
  mysql-data:

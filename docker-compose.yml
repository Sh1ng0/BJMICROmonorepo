
services:
  # --- Base de Datos ---
  mysql-db:
    image: mysql:8.0
    container_name: mysql-bjmicros
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=game_core_db
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Infraestructura de Kafka (Modo KRaft) ---
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-bjmicros
    ports:
      - "9092:9092"
      # Opcional: podemos exponer el 9093 si necesitas acceder desde fuera de Docker
      # - "9093:9093"
    environment:
      CLUSTER_ID: '0HyBJRfGTmeiNhglXrZE5Q'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'


  # --- Nuestros Microservicios ---
  game-core-app:
    container_name: game-core-app
    build:
      context: ./game-core/game-core
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/game_core_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started
  bets-service-app:
    container_name: bets-service-app
    build:
      context: ./bets/bets
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/bets_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started
  user-service-app:
    container_name: user-service-app
    build:
      context: ./user/user
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/user_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  auth-service-app:
    container_name: auth-service-app
    build:
      context: ./auth/auth
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/auth_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      mysql-db:
        condition: service_healthy
      kafka:
        condition: service_started

  # --- API Gateway (Modo Stand-Alone) ---
  apisix:
    image: apache/apisix:3.9.1-debian
    container_name: apisix-bjmicros
    volumes:
      # Montamos nuestros ficheros de configuraci√≥n locales sobre los del contenedor
      - ./apisix_config/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./apisix_config/apisix.yaml:/usr/local/apisix/conf/apisix.yaml
    ports:
      - "9180:9180" # Admin API
      - "9080:9080" # Proxy

volumes:
  mysql-data: